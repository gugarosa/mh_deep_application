%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 330.000000 470.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 330 470
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 330 470
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /x put
dup 34 /A put
dup 35 /t put
dup 36 /e put
dup 37 /n put
dup 38 /ccedilla put
dup 39 /atilde put
dup 40 /o put
dup 41 /plus put
dup 42 /C put
dup 43 /d put
dup 44 /i put
dup 45 /fi put
dup 46 /c put
dup 47 /a put
dup 48 /P put
dup 49 /s put
dup 50 /l put
dup 51 /space put
dup 52 /ampersand put
dup 53 /N put
dup 54 /r put
dup 55 /m put
dup 56 /z put
dup 57 /M put
dup 58 /L put
dup 59 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<




2600C80026000D5D3031250E0123222E0235343E023332161733113311233525141E0233323E0235342E0223220E0201DB1E603337593F23233F593733601E024444FEA3182D422A2742301B1B3042272A422D184F2D2E26425A34345A42262F2E0171FD0C4F9B2745331D1D3245282845331D1E3345000000020038FFF4020401E000080027011BB800282FB800002FB8002810B8001ED0B8001E2FB900080004F4B8000010B900090004F4B8000CD0B8000C2FB8000810B8000DD0B8000D2FB8000010B80015D0B800152FB8000910B80029DC00B800004558B800232F1BB9002300093E59B800004558B800192F1BB9001900053E59BB00000001000C00042BB8002310B900030001F4410500D9000300E9000300025D411B0008000300180003002800030038000300480003005800030068000300780003008800030098000300A8000300B8000300C80003000D5DB8001910B900120001F4411B0007001200170012002700120037001200470012005700120067001200770012008700120097001200A7001200B7001200C70012000D5D410500D6001200E6001200025D3031012E0123220E0207051C0107211E0333323637170E0123222E0235343E0233321E0201BF034F49223A2C1A02018401FE7C011A2E3E24354D14332A653A34594025244056323754381D010E4257192B371E16071009233E2E1B312028352E25425A35355A4225253F540002004D000000AD02B80003000F0082BB00040004000A00042B411B0006000400160004002600040036000400460004005600040066000400760004008600040096000400A6000400B6000400C60004000D5D410500D5000400E5000400025DBA0001000A0004111239B800012FB900000004F400B800004558B800002F1BB9000000053E59BB000D0002000700042B3031332311333714062322263534363332169F44440E1E12121E1E12121E01D4B4151B1B15151B1B0001005C000000A002F40003001EBB00000004000100042B00B800004558B800002F1BB9000000053E59303133231133A0444402F4000000000100560000031D01E00031010ABB00270004002800042BBB001A0004001B00042BBB000F0004001000042BBA0008001B001A111239B8002810B8002CD0B8002C2FB8002710B8002DD0B8002D2FB8002710B80030D0B800302FB8000F10B80033DC00B800004558B800032F1BB9000300093E59B800004558B8000B2F1BB9000B00093E59B800004558B8000F2F1BB9000F00053E59B800004558B8001A2F1BB9001A00053E59B800004558B800272F1BB9002700053E59BA0008000F0003111239B8000B10B900140001F4410500D9001400E9001400025D411B0008001400180014002800140038001400480014005800140068001400780014008800140098001400

000017111239B8000010B80019D000B800004558B8000B2F1BB9000B00093E59B800004558B8000E2F1BB9000E00093E59B800004558B800182F1BB9001800053E59BA00080018000B111239B8000B10B900120002F4410500D9001200E9001200025D411B0008001200180012002800120038001200480012005800120068001200780012008800120098001200A8001200B8001200C80012000D5D303113342627331E0115333E0133321617072E0123220E021D0123115A0202410202021450320D150B09061C0E1B32251744016D133C18132E0F29330203400204142B432FF0016D00010026FFF4018F01E0002F0181B800302FB8001F2F410500DA001F00EA001F00025D411B0009001F0019001F0029001F0039001F0049001F0059001F0069001F0079001F0089001F0099001F00A9001F00B9001F00C9001F000D5DB80000D0B800002FB8003010B80027D0B800272FB900080004F4411B0006000800160008002600080036000800460008005600080066000800760008008600080096000800A6000800B6000800C60008000D5D410500D5000800E5000800025DB8001F10B9000E0004F4B80031DC00B800004558B8002C2F1BB9002C00093E59B800004558B800132F1BB9001300053E59B8002C10B900030001F4410500D9000300E9000300025D411B0008000300180003002800030038000300480003005800030068000300780003008800030098000300A8000300B8000300C80003000D5DB8001310B9001A0001F4411B0007001A0017001A0027001A0037001A0047001A0057001A0067001A0077001A0087001A0097001A00A7001A00B7001A00C7001A000D5D410500D6001A00E6001A00025D3031012E0123220E02151416171E0115140E0223222627371E0133323E02353426272E0335343E023332161701530F3D2712241C11363A534F1F323F203564203612462A16281E124743152F281A1C2F3C20315C1701651D2508121C1321230C1141372837230F2C2F281F2A08141F17252510050F1D2C21243321102C280000010004FFFA012D0258001B00C0BB00020004001300042BB8001310B80017D0B8000210B80019D000B800004558B800162F1BB9001600093E59B800004558B8001A2F1BB9001A00093E59B800004558B8000E2F1BB9000E00053E59B8001A10B900000001F4B8000E10B900070001F4411B0007000700170007002700070037000700470007005700070067000700770007008700070097000700A7000700B7000700C70007000D5D410500D6000700E6000700025DBA000A000E0016111239B8000010B80014D0B80015D03031012311141E0233323637170E0123222E02351123353335331533012D840A131A0F0E1F0E03122717132A241761614484019BFEEF1A22130708073B07070A1C302701



00>] def
/CharStrings 29 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/plus 3 def
/A 4 def
/C 5 def
/L 6 def
/M 7 def
/N 8 def
/P 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/i 14 def
/l 15 def
/m 16 def
/n 17 def
/o 18 def
/r 19 def
/s 20 def
/t 21 def
/x 22 def
/y 23 def
/z 24 def
/atilde 25 def
/ccedilla 26 def
/fi 27 def
/u0459 28 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-394 -411 1309 1192} readonly def
/UniqueID 4446589 def
currentdict end
currentfile eexec


DC55360012FF97815D7AC8F3B6B75D4AD25EB68300286256A92F861077A18372DE3C891CA1692D385C9245D66DB26A2B903728213A531A01BCFDB05738CE8DDDE4EF3A1F02F32272B09532D98AB6E63FD55B66C2583079354AE79BBBEBCCFE8BC98A6B84C8E5067DA88BB9AD944DB6D36A8013BB6E7005EBC1251A90971D411A639B88EC702ACDF2DD8422A75E85A7D1F023F9EA07A12173635BC93FCB5812C3CE545B1D723852714577117F2F82D74924F14B3530EF506676093B658591DE6EED052C4DBE9F87DBBB1B24B3332E1E0E52775EE1B9130250A864340A42728CDCE4781D812F9CE6D80079CD04576CD32D161651E2BF88B207BD8267FF5B72FFAC0A1428EA05FA5CF19313997DF2B87305D5DEC94C0431E4E9B5AF6A974D42CB08C8A39662569EF8F4F45E8255016BB29D66D70480CC1A64BF4A7CE6AB742B59FF0507919CB6F6B31C0C95B25CFF149EB4BC7A2358D639C2923706D38C61E152667C01BF2B620AC9B6658CAE4142C94CDD7E4E41767E95207A9AD28C698E52D3184FE76626774F62ACCA9A0C37D3CEB6B3541A0009FD69EA300554454AA587AFD121C4C444E57A9BF77D1E7B7DBFC93DA7F530C2B2DF62E157BB9A2B1964E5ADFF252680D7A26E3EFA590F86B7006BC391829E56CBDFACBB8DB7BB004BB09FDF6ABB2967E8BA8D82802757A1EFF46C7A9F7FFDD6931CD11CBEA56758DF0D75E8A2D380C858085E82CEEE56CA68F1565B20470777872678073EFBCCD50E774EF3C2C2AEAF75B0108DC93844280416F769CEEB5110A333EA5058A6C4FCB8EDD7DB93EA97D135129D3019A3985C2CDD6FFD8FAE074AD760E8172F0C502EC9AB2F0E0A455BDDBFB521CB9D2B76DC07D8A73E5A9575EA7B42F828B34B8386484178891FAAE21B6F10DED62F99BCD08E3DC3DBE907141E6F116D63DFA0EBDEE2BA5E12AE6DEA532DE048112178B8328BCF99378E18762003C2321C30B11045E58FBC4AAB8E280FE6AD86F9B7E39276C04F88767B20B899E5A1F3F952FB3C3D343139D47BFBCC03256F5A70048DAE516372273460A1D4ABF4907F5D293ED4798E4E60D75CF2C43BDF95949F2B2A8EC70DC0806941C5D955061D8D8DA645323DD455EB9C4E9684277B0083800BFD47205DE8471535244C04A7A9DF30109E701276AF6578A4EEAE8403D6E956EEC34B972D504EA1F943A21E52F8770A1A515D0A4B94C989EE31526953EE2EB716B58F21BDC410ABC2FD8B9831A442DAF4E6EC48B57C0068A0AE8521B351292CA208244C8AF2827D3F975E997FD2CDF28E162FD8020835662100C1F1376517E1D1B45311E91D4E2AA85D0F336F254774B11DECFAC5908BBA6C373A35FAC9358953C0A381AB096E767AEFB9D37DD09EDD4E821D8461625C96BB35EDFE3AAE904D01BFCE72A7EF44DAEBC02C56921903CEAC00C8A2195C91453B
8F8A432BC9077DC4D5F60415EE320C846A9B0D6D4308F2DF3DAC521EE43B3149A8CF5C64AEA6C07DB345E071A4D2BC5ECA549D7724099A34ECC1E702C398AFC4AB9B1CD650CE26E04AB5A20139B48E53AE0722F770E1A0263C1F8DE647B8F66880B6318DCE0F21EA12C6792C0E21B9501720CA6A65D21D74854807C4B1ECF682860995D94B9271DB69E45B203B00D17771B341ECEE5A203FAD83D6E2771E9EA89DFBCFAE0657D3FA7ADBC28B6FEF24EF487C838066F188D96A65E8EFCB5459B7B27EEA04409A356BAC133441A54AF69C391498F028820B6F3A28A65908C33B6CB7A8AFBB5DB547405B5338A736CDB9015217EBF3C7930B74214DE35953B88D5BD0FE73180EC17E476F8BC791F64E0B663E3B4C4D88AEADC2DC45A8CFCC6028031CBB80ED92BD0374ADB2012D498555D1B8F501CF572BE4BDE11E47288A86166388F69FF4E30E43DF5C8123BC3A0FEC765B90B0F9BCD112C9E57AEF8ACFD45702FC08E201E852A1082D4428F88D898FDEF09CEDDA66517B3EF330267A3EDB678DBC6650C32DA584AFCE5D34C37370DA3F2F0A8C4D5F9CE8BA48839CDAFD05594FA74B0ECED71E538211FE8B7776FAF415DCBBF8452DC1017750DDCB672C6AF57C642D8A0337047D33E47102DDE57DAB2E5657DA941614FEA9D04C8C0C64234DB9AA7718DB062B3CB801A07FC2A3F74950CDC709C29DE9BFEF92CD72C2AA479DAF87A3FD88069F1A2CE1F7C3A65042109418D5ACCF425301398BA88930DD920ACD9936E5EF59D34FB01B17A471CC97914A92EF433167065A8BC1B0708E5D7FC7420536BDE58A26DB5E5CC26219BC2D327EEBD4ED21872DD493323AB9EB50B7E76C038CC5224087F94B0C76BE952DB1E687519916A20E3EBA77C1AEDF25EA293E0777ECEB12581EC8442C85BBDDEE517491E3A46615F4193C4586A95D6E098077A9DCF3830E17BD3AC35370A349EDC3AFC1193731411FBB6113E33AF6990370AABE31F2A82AF2599496EB5DF60AD6E5A528181C5D9D2990C3EC3C7FBAE7F884D2E07DEA12C5E8F9A563EEB5F19252AD4C3F7F71D5C602CEC919066BEA7017FB63E32702A9922D69FFFB3CE71BD33EC0F6985A2EA61F2ADF6AA5AB207CC39BF5EF8310D0CD394C9EBB868AB75191FB5777C31DBA5CE8C33863ACE4A459AA8A487F0A0C1381B658803084AA446CB63B39663713057496B9BF121B9AD20867D8D0BEF5BFD9DE6661F1BDF5F909131328134AE44B3D35D8B1F80E855BB3305FFA2E39A5E6E1186A286A4A738FD591AAC43CD00A232C5CE20EA98F1429F40D3BB13797BA0C14010F0EA1A8210DE54C2D1231A9EFC7AC7714D9B4B99AC0073EF6FECF4DB9FEE1B49EC74FBC6770D546F99A1F86CD4F52C68EF3A4DDF752859C2DD39F67B8CF526EB8478C752525947D177F5F9A860735C282F7372D37F09B0C322D4BB981
C78B0EF8C97C4BD8CA0FD8808B9623AA37DC56AFCA5B7B7F6AFF099969711FC305487C18D1B6CC9A022766639823A013FA6FBF7147402570DB37CE9EEF79327CF78B6194846258D2A7EFDD498D9658F864F9F48705718B6F700F6C334F32763DF5046517760E98882363ACA1FC7C7B0B3403337BA178D4E51C44FAF464031436A63796CFC9AED2FBEE6E4CBB4710A148A15373346CC091A4E2C033560F855633A300443E44DB987AA4F53BC9EA587466B08D0046B4C8F1FB0E4CDA146F3B811432D7353550FA6CD5EA48AD27706F5696BB3B48061C0B822927310BAB55E414218EEC3DA5A08D41C69D738EE0F36B68C2636C9F2926E5D7ECD089E0D327E9E90C54286EAE936826F8CFB34BCC58C70F24D9FEECFB6F8A51E08A3933CE2C31EEE8AF467F91C870D2357B2C261E3B775AC54A419D51A072EB76FFA91747D8CB78045D9B889A56C01CBD40054493415F1877B19D5B709365EE70B0CF57A93F86762271BC3B34FF187541376E711650653EC8ADD30B09D6E7B53FAF95571310A9A087DA02AACED351375E4BEAF1DED31F1D72CFD8200B3C8CDF71053EF900B8BECAFCDAE09A7BC840004A0DCBBF171C56E6ED197223102B0C34CAE9EEE524FAC325BE9140CF4DF95794A6717B8CBC72754576F82D89675111A0070F4B49D35C3B51D496492C6C4FE9A96493B6805D305B72495191BB0707F3C2B353E72FF714DC6B00960B9FAC5C8718838E0E04182678E836B6378C3DA0927EC9FDF1F411DF29E455A223C0E4F7B2F3E89E414414C9A60A025E3F36E6DA808DEB6FEE52FE4D375235414DCD7B3C701940895866A9B7EF19508511F026E3241EED6C3861A59219E0333B04C584922FBCDBB3BF2671BDE7844ADD860CB9B240F27F8B01191DF334C70D7B91F407FBE52A52C99331474900D6FD73F237F5928CB704D9F09B39F2C5187B153C2A2C738D57910A671DC25187B7D69F4D76E67FAD3AD47131F652B52BCC67D987D2DC0C5491BAD99965617B96B796BAD244967A29D353BBE8724F5FAA77B2F6A3323473E1BB2F32D6D13FCA6B78046356E95F30751125FB8459C4CB8BA9FAC86136EA52CE2994431A130643B597D9ADF6F16AA517228E0E847195AA90C9F2865E29F9597D3D6AE3CB09FC5750B70A8E7FA917673984F19D8F8617485D01ADEAA373B04B6035FD31DE746F121DA86AFD7F758EB4097E7BEA3F5173C9E04D55DB6474387C38B0CE842E182EF0239C77F9BF4BEB3EE9FB81E842575732ABAEC8BDB3F872B35DAD0191AF4E468DFC93B726C41D60667025F58FBBDD7AB1B78327450FC16D8DE15A54D553C9757CCEA49BFD95BB62EF3C064C5F2B0470C84563D217C3959C41CDCF43CBD06FB202CD8252DAEE60ABAA970C65DA9785BBB5F9D69720765F678DC9BFB976A5808AA1428D1EC6FBE15D361F09FEDD18301E1798E48E

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
%RBIBeginFontSubset: AvenirNext-Italic
%!FontType1-1.0: AvenirNext-Italic 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /o put
dup 35 /f put
dup 36 /t put
dup 37 /m put
dup 38 /a put
dup 39 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -381 1 index div -409 2 index div 1365 3 index div 1194 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/S 1 def
/a 2 def
/f 3 def
/m 4 def
/o 5 def
/t 6 def
/x 7 def
/u0459 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-381 -409 1365 1194} readonly def
/UniqueID 4505616 def
currentdict end
currentfile eexec

A465780E5053C7FD73DC3C7C9F3CA4475A8EC66E6FD1482C759E3FBDF40AD816EA804BEA128D5D405C2E1E18F7E542C50AD3ED2E1D570C913FDAB5BA5217D27BB4DC1FBFEAFBFFFFF278E8FFD50CC9721285CE23627D9B195F23652539F188EF8FE689BE8B2E632194C421F8D6EA7CC03B3DA7F8DF8BEAF8F63E82A791B3BF8B962D4927FD26231CF816B3BF63CE9AD9714A82E6A4ACF881DA5D4352F4C42C307621379A0B3DB71D64907645D552611B62F2962E7C70753DB39EA2E7680D2B45E09AA457170F606AFAAB73A3EFFDF2AF1794B1E70F16A94545D5CEF47B2992B94353BFD6BCE9FB282A26BD8618A52E748E2DBCE366440EAE23DE23875EEC546D9491EEA44587DEFFA96512A1D2ED1DB55C534098C5AD6B5AB8584E685E4978FC390E17A1640CE70D0646B2FCF2CF80C5D695753BD942CA901BE415B01226DC9DDAC2B54B17B3D089B6E83F1D75FCB325B520FFAC43F2B082396A7FC2EC427A1A7EF7FDEB7C8FE43C039417F5DA007763C64DD5C2168D9BAF4232225A6C4AE880894C0EB2CD7B3F8EE1852D3518DD8611DDEB1C4943F5EA9C10A3D93BA7F16ABB439424680A88A501E4B1797E8845A639FA15E8D8048F9E8BE84089D0D8082E703CA9DEB3CAA313EED307FC68954A54B0C4A7EBA95060B44EAB69D9DF8831362442B376C4CAEDE92F61F98E377B230DAD55237A5818C2FFC031309115EAD71D869CB8DC753BC4DD655D956872939F006A2CABD074866D5BBF5D9ECB2FE112BCE9AE4BBECCD28E88AE4688BC0256EBC84829B3D42D1649A0DAA96728403D65CB994F484028AD85DC8F6A071A0BBB9496529BEF0596E36769502C4E9F1259A8E9EA88E5A81115B0B76EE92F0F8D791F4FA038390ADEDEE8DB7E406365FB117C1B3C348904D603FCA01B797A86177B1307CA5E5C98960CA14F44377EFD50AD4AEFF07320529438A5A73890D5504D2C0E8FADF05D40B6A527584303E4B4B4E567AC3F6596DE2A17D230F5B874BBF7FE5EF8E76799A54498C899A2835ED4F53B8C9D10966E81F72D0421471047A0699FD3DA0452E1CACF4C3F9CDAE43A1F0823A9AD734DDA1D40A93AD5F004291B5457F6F9CBA8E2910FE930425C8E1FA72AA1455C04F56E2D5B5781B88D529BD354ABE90409766313850B95FE385EB36C412DBF0502C12F74216F026E79A51B1A6027D02B876BD0BA8B4A8DE50C7CB607CDBC20A3FE7F6E5E4371AB74DC1E41D1D47B1882522FF94089394EC04FB1AD423C7420E0CF076D882568DB541A06066E1DAF6A4A8DA2198AAACF70D3637B74C406CF8045532ED4CA168D32BD68461F01669C77E94A650EDEB49570362A0DDEF01DF5EF498BEE35682AA131DB70008A069F813C5FF62FAD8533BB989E49D624609CBF6C14351AC2628A11FCBCC507FFF2D60BC405F7288B18517C9ED484957402E6F0FE863B
A4E61E9CC60C7D1D214CA93A00E38416CA9759C9090D28AA64BE1ABB24DD9CDD00A18AC36702430BA1C8FB1CA1D31311237C20B48A229FA50E68F39403F35177BC93CDF88E2435FB37FFF25E77D6A167685BF24926F47FFEC7CFC526D4997F68F1819F0030F5A2A3164B7EE9246B917C8D2EE47E71E87EEBE0F0E7375E954EE11E340B20CE96786CAAD2329D0A215BFE27190A68260C2D74954F33C02064BC3EC306CCB1DE2371F4489790D5B38895A04426FD6217D0C14AFB8037A0DA680528DEEE702F6EA25AB7C75E08BB594BAF7053078086ADC91AB7F61AA41346A322D484D6618460825A78B2D879834C6E65F4969E088BC43FE5DDAB37A3F35FA9B34018263DA2C525FC0BBF0888DAC8837A6DF2BC5F971F716FE46426152E87D4F13E3BD0B3C4E1861FF1789B68C6A4C52CD37F621583300C4AA912E31C9730796E5845F7C6A2B66927E5ECEF45E535C6F1F87BEAF65C26943F2D9D4F7BB0EB434059B6428497A4B55EE98C6F08D54B5336D55EA73086469EA68CE03885554B99A7A7A854947F5D8693725624F0C1A05039751C71CB21DF6150802E9E62CF9668C7AE0D78ACBB54392DD87DD4940BFCD2DF5044DA6DA741F4C0F1AE90F06651BC1198FD2D68A199C30617E7C0357F7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Italic cguidfix
/F2.1/AvenirNext-Italic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.75 1 0.75 sc
q
0 0 330 470 rc
38.1875 295.125 m
141.3125 295.125 l
146.28307 295.125 150.3125 291.09555 150.3125 286.125 c
150.3125 122.82951 l
150.3125 117.85894 146.28307 113.82951 141.3125 113.82951 c
38.1875 113.82951 l
33.216938 113.82951 29.1875 117.85894 29.1875 122.82951 c
29.1875 286.125 l
29.1875 291.09555 33.216938 295.125 38.1875 295.125 c
h
38.1875 295.125 m
f
1 J
1 j
0.60000002 i
0.13725491 0.36862746 0 sc
1 0 0 -1 -386 444 cm
424.1875 148.875 m
527.3125 148.875 l
532.28308 148.875 536.3125 152.90443 536.3125 157.875 c
536.3125 321.1705 l
536.3125 326.14105 532.28308 330.1705 527.3125 330.1705 c
424.1875 330.1705 l
419.21695 330.1705 415.1875 326.14105 415.1875 321.1705 c
415.1875 157.875 l
415.1875 152.90443 419.21695 148.875 424.1875 148.875 c
h
424.1875 148.875 m
S
/Cs2 SC
0 0 0 sc
475.60001 136.5 m
475.72488 196.12787 l
S
0 i
/Cs1 SC
1 0.75 0.75 sc
CM
107.42765 43.477646 m
117.1908 33.714542 117.1908 17.885445 107.42765 8.122344 c
97.664551 -1.6408058 81.835449 -1.6408058 72.07235 8.122344 c
62.3092 17.885445 62.3092 33.714542 72.07235 43.477646 c
81.835449 53.240795 97.664551 53.240795 107.42765 43.477646 c
f
0.60000002 i
0.69411802 0 0.109804 sc
1 0 0 -1 -386 444 cm
493.42764 400.52237 m
503.1908 410.28546 503.1908 426.11456 493.42764 435.87766 c
483.66455 445.64081 467.83545 445.64081 458.07236 435.87766 c
448.3092 426.11456 448.3092 410.28546 458.07236 400.52237 c
467.83545 390.75922 483.66455 390.75922 493.42764 400.52237 c
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
471.87799 423.20001 m
(!)s
/Cs1 SC
1 0.75 1 sc
CM
59.5 162.75737 m
120 162.75737 l
120 138.75737 l
59.5 138.75737 l
h
59.5 162.75737 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
445.5 281.24261 m
506 281.24261 l
506 305.24261 l
445.5 305.24261 l
h
445.5 281.24261 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
460.48999 295.74261 m
("#$%&'\()[ 5.600000 2.536000 4.576000 4.648000 4.000000 4.272000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
94.699745 93.107117 m
97.433426 90.373451 97.433426 85.941299 94.699745 83.207634 c
91.966072 80.473953 87.533928 80.473953 84.800255 83.207634 c
82.066574 85.941299 82.066574 90.373451 84.800255 93.107117 c
87.533928 95.840797 91.966072 95.840797 94.699745 93.107117 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -386 444 cm
480.69974 350.89288 m
483.43341 353.62656 483.43341 358.05869 480.69974 360.79236 c
477.96606 363.52606 473.53394 363.52606 470.80026 360.79236 c
468.06659 358.05869 468.06659 353.62656 470.80026 350.89288 c
473.53394 348.15921 477.96606 348.15921 480.69974 350.89288 c
S
/Cs3 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
471.08801 359.84262 m
(\))s
/Cs1 SC
1 0.75 1 sc
CM
1.0000057 100.15737 m
61.500008 100.15737 l
61.500008 76.157372 l
1.0000057 76.157372 l
h
1.0000057 100.15737 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
387 343.84262 m
447.5 343.84262 l
447.5 367.84262 l
387 367.84262 l
h
387 343.84262 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
395.534 352.84262 m
(*\(+,-./&'\()[ 5.664000 4.888000 5.096000 2.000000 4.352000 4.000000 4.272000 4.000000 4.272000 0.000000 ] xS
399.086 363.84262 m
(0\(1,.,\(%/2)[ 4.064000 4.888000 3.552000 2.000000 4.000000 2.000000 4.888000 4.648000 4.272000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
448 355.89999 m
468.25 355.89999 l
S
475.75 281.24261 m
475.75 230.02788 l
S
0 i
CM
89.75 221.97212 m
86.75 213.97212 l
92.75 213.97212 l
h
89.75 221.97212 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
475.75 222.02788 m
472.75 230.02788 l
478.75 230.02788 l
h
475.75 222.02788 m
S
/Cs4 SC
0.75039524 0.75075155 0.98323244 sc
CM
59.5 196.55737 m
120 196.55737 l
120 172.55737 l
59.5 172.55737 l
h
59.5 196.55737 m
f
1 J
1 j
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
445.5 247.44263 m
506 247.44263 l
506 271.44263 l
445.5 271.44263 l
h
445.5 247.44263 m
S
/Cs3 SC
0 sc
0 i
459.00601 256.44263 m
("+,&'\(343)[ 5.600000 5.096000 2.000000 4.000000 4.272000 4.888000 2.000000 5.632000 0.000000 ] xS
450.64999 267.44263 m
(5\(67/2,8/&'\()[ 6.112000 4.888000 2.880000 7.064000 4.272000 2.016000 2.000000 3.536000 4.272000 4.000000 4.272000 0.000000 ] xS
/Cs4 SC
0.76691842 0.86558574 0.98475462 sc
CM
59.5 247.87213 m
120 247.87213 l
120 223.87213 l
59.5 223.87213 l
h
59.5 247.87213 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
445.5 196.12787 m
506 196.12787 l
506 220.12787 l
445.5 220.12787 l
h
445.5 196.12787 m
S
/Cs3 SC
0 sc
0 i
467.84601 210.62787 m
(9:0)[ 7.088000 4.080000 0.000000 ] xS
/Cs4 SC
0.75039524 0.75075155 0.98323244 sc
CM
59.5 282.79999 m
120 282.79999 l
120 258.79999 l
59.5 258.79999 l
h
59.5 282.79999 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
445.5 161.2 m
506 161.2 l
506 185.2 l
445.5 185.2 l
h
445.5 161.2 m
S
/Cs3 SC
0 sc
0 i
459.00601 170.2 m
("+,&'\(343)[ 5.600000 5.096000 2.000000 4.000000 4.272000 4.888000 2.000000 5.632000 0.000000 ] xS
450.64999 181.2 m
(5\(67/2,8/&'\()[ 6.112000 4.888000 2.880000 7.064000 4.272000 2.016000 2.000000 3.536000 4.272000 4.000000 4.272000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
492.19882 315.72131 m
492.19882 322.96393 l
459.30118 322.96393 l
459.30118 315.97287 l
S
0 i
CM
73.30117 136.02713 m
70.30117 128.02713 l
76.30117 128.02713 l
h
73.30117 136.02713 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
459.30118 307.97287 m
456.30118 315.97287 l
462.30118 315.97287 l
h
459.30118 307.97287 m
S
CM
106.19883 136.27869 m
103.19883 128.27869 l
109.19883 128.27869 l
h
106.19883 136.27869 m
f
1 0 0 -1 -386 444 cm
492.19882 307.72131 m
489.19882 315.72131 l
495.19882 315.72131 l
h
492.19882 307.72131 m
S
1 J
1 j
0.60000002 i
475.75 347.84262 m
475.75 315.14264 l
S
0 i
CM
89.75 136.85738 m
86.75 128.85738 l
92.75 128.85738 l
h
89.75 136.85738 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
475.75 307.14264 m
472.75 315.14264 l
478.75 315.14264 l
h
475.75 307.14264 m
S
1 J
1 j
0.60000002 i
475.75 392.84262 m
475.75 373.74261 l
S
0 i
CM
89.75 78.257378 m
86.75 70.257378 l
92.75 70.257378 l
h
89.75 78.257378 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
475.75 365.74261 m
472.75 373.74261 l
478.75 373.74261 l
h
475.75 365.74261 m
S
1 J
1 j
0.60000002 i
435.20001 259.80002 m
425.60001 259.80002 l
425.60001 336.89218 l
475.04999 336.89218 l
S
0 i
CM
57.200005 184.2 m
49.200005 187.2 l
49.200005 181.2 l
h
57.200005 184.2 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
443.20001 259.80002 m
435.20001 256.80002 l
435.20001 262.80002 l
h
443.20001 259.80002 m
S
1 J
1 j
0.60000002 i
435.20001 172.60001 m
425.60001 172.60001 l
425.60001 235.91016 l
475.75 235.94336 l
S
0 i
CM
57.200005 271.39999 m
49.200005 274.39999 l
49.200005 268.39999 l
h
57.200005 271.39999 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
443.20001 172.60001 m
435.20001 169.60001 l
435.20001 175.60001 l
h
443.20001 172.60001 m
S
/Cs1 SC
0.75 1 0.75 sc
CM
187.82812 382.35715 m
290.95312 382.35715 l
295.92368 382.35715 299.95312 378.3277 299.95312 373.35715 c
299.95312 122.82951 l
299.95312 117.85894 295.92368 113.82951 290.95312 113.82951 c
187.82812 113.82951 l
182.85756 113.82951 178.82812 117.85894 178.82812 122.82951 c
178.82812 373.35715 l
178.82812 378.3277 182.85756 382.35715 187.82812 382.35715 c
h
187.82812 382.35715 m
f
1 J
1 j
0.60000002 i
0.137255 0.36862701 0 sc
1 0 0 -1 -386 444 cm
573.82812 61.642857 m
676.95312 61.642857 l
681.92371 61.642857 685.95312 65.672295 685.95312 70.64286 c
685.95312 321.1705 l
685.95312 326.14105 681.92371 330.1705 676.95312 330.1705 c
573.82812 330.1705 l
568.85754 330.1705 564.82812 326.14105 564.82812 321.1705 c
564.82812 70.64286 l
564.82812 65.672295 568.85754 61.642857 573.82812 61.642857 c
h
573.82812 61.642857 m
S
0 i
1 1 0.75 sc
CM
257.06827 43.477646 m
266.83142 33.714542 266.83142 17.885445 257.06827 8.122344 c
247.30518 -1.6408058 231.47607 -1.6408058 221.71297 8.122344 c
211.94983 17.885445 211.94983 33.714542 221.71297 43.477646 c
231.47607 53.240795 247.30518 53.240795 257.06827 43.477646 c
f
0.60000002 i
0.573807 0.56553602 0 sc
1 0 0 -1 -386 444 cm
643.0683 400.52237 m
652.83142 410.28546 652.83142 426.11456 643.0683 435.87766 c
633.30518 445.64081 617.47607 445.64081 607.71295 435.87766 c
597.94983 426.11456 597.94983 410.28546 607.71295 400.52237 c
617.47607 390.75922 633.30518 390.75922 643.0683 400.52237 c
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
621.48663 423.20001 m
(;)s
/Cs1 SC
1 0.75 1 sc
CM
209.14062 162.75737 m
269.64062 162.75737 l
269.64062 138.75737 l
209.14062 138.75737 l
h
209.14062 162.75737 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 281.24261 m
655.64062 281.24261 l
655.64062 305.24261 l
595.14062 305.24261 l
h
595.14062 281.24261 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
610.13062 295.74261 m
("#$%&'\()[ 5.600000 2.536000 4.576000 4.648000 4.000000 4.272000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
244.34036 93.107117 m
247.07405 90.373451 247.07405 85.941299 244.34036 83.207634 c
241.60669 80.473953 237.17455 80.473953 234.44089 83.207634 c
231.7072 85.941299 231.7072 90.373451 234.44089 93.107117 c
237.17455 95.840797 241.60669 95.840797 244.34036 93.107117 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -386 444 cm
630.34039 350.89288 m
633.07404 353.62656 633.07404 358.05869 630.34039 360.79236 c
627.60669 363.52606 623.17456 363.52606 620.44086 360.79236 c
617.70721 358.05869 617.70721 353.62656 620.44086 350.89288 c
623.17456 348.15921 627.60669 348.15921 630.34039 350.89288 c
S
/Cs3 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
620.72864 359.84262 m
(\))s
/Cs1 SC
1 0.75 1 sc
CM
268.14062 100.15737 m
328.64062 100.15737 l
328.64062 76.157372 l
268.14062 76.157372 l
h
268.14062 100.15737 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
654.14062 343.84262 m
714.64062 343.84262 l
714.64062 367.84262 l
654.14062 367.84262 l
h
654.14062 343.84262 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
662.67462 352.84262 m
(*\(+,-./&'\()[ 5.664000 4.888000 5.096000 2.000000 4.352000 4.000000 4.272000 4.000000 4.272000 0.000000 ] xS
666.22662 363.84262 m
(0\(1,.,\(%/2)[ 4.064000 4.888000 3.552000 2.000000 4.000000 2.000000 4.888000 4.648000 4.272000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
640.75311 229.42131 m
640.75311 243.02132 l
625.39062 243.02132 l
625.39062 280.66394 l
S
0 i
CM
254.75313 222.57869 m
251.75313 214.57869 l
257.75314 214.57869 l
h
254.75313 222.57869 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
640.75311 221.42131 m
637.75311 229.42131 l
643.75311 229.42131 l
h
640.75311 221.42131 m
S
1 J
1 j
0.60000002 i
632.89062 355.89999 m
653.14062 355.89999 l
S
0 i
/Cs4 SC
0.75039524 0.75075155 0.98323244 sc
CM
209.14062 196.55737 m
269.64062 196.55737 l
269.64062 172.55737 l
209.14062 172.55737 l
h
209.14062 196.55737 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 247.44263 m
655.64062 247.44263 l
655.64062 271.44263 l
595.14062 271.44263 l
h
595.14062 247.44263 m
S
/Cs3 SC
0 sc
0 i
608.64661 256.44263 m
("+,&'\(343)[ 5.600000 5.096000 2.000000 4.000000 4.272000 4.888000 2.000000 5.632000 0.000000 ] xS
600.29065 267.44263 m
(5\(67/2,8/&'\()[ 6.112000 4.888000 2.880000 7.064000 4.272000 2.016000 2.000000 3.536000 4.272000 4.000000 4.272000 0.000000 ] xS
/Cs4 SC
0.76691842 0.86558574 0.98475462 sc
CM
209.14062 335.24261 m
269.64062 335.24261 l
269.64062 311.24261 l
209.14062 311.24261 l
h
209.14062 335.24261 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 108.75738 m
655.64062 108.75738 l
655.64062 132.75739 l
595.14062 132.75739 l
h
595.14062 108.75738 m
S
/Cs3 SC
0 sc
0 i
617.48663 123.25738 m
(9:0)[ 7.088000 4.080000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
625.39062 195 m
625.39062 142.65738 l
S
0 i
CM
239.39062 309.34262 m
236.39062 301.34262 l
242.39062 301.34262 l
h
239.39062 309.34262 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.39062 134.65738 m
622.39062 142.65738 l
628.39062 142.65738 l
h
625.39062 134.65738 m
S
1 J
1 j
0.60000002 i
641.83948 315.72131 m
641.83948 322.96393 l
608.94177 322.96393 l
608.94177 315.97287 l
S
0 i
CM
222.94179 136.02713 m
219.94179 128.02713 l
225.94179 128.02713 l
h
222.94179 136.02713 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
608.94177 307.97287 m
605.94177 315.97287 l
611.94177 315.97287 l
h
608.94177 307.97287 m
S
CM
255.83946 136.27869 m
252.83946 128.27869 l
258.83945 128.27869 l
h
255.83946 136.27869 m
f
1 0 0 -1 -386 444 cm
641.83948 307.72131 m
638.83948 315.72131 l
644.83948 315.72131 l
h
641.83948 307.72131 m
S
1 J
1 j
0.60000002 i
625.39062 347.84262 m
625.39062 315.14264 l
S
0 i
CM
239.39062 136.85738 m
236.39062 128.85738 l
242.39062 128.85738 l
h
239.39062 136.85738 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.39062 307.14264 m
622.39062 315.14264 l
628.39062 315.14264 l
h
625.39062 307.14264 m
S
1 J
1 j
0.60000002 i
625.39062 392.84262 m
625.39062 373.74261 l
S
0 i
CM
239.39062 78.257378 m
236.39062 70.257378 l
242.39062 70.257378 l
h
239.39062 78.257378 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.39062 365.74261 m
622.39062 373.74261 l
628.39062 373.74261 l
h
625.39062 365.74261 m
S
1 J
1 j
0.60000002 i
666.7406 259.80002 m
674.84064 259.80002 l
674.84064 336.89218 l
625.39062 336.89218 l
S
0 i
CM
272.74063 184.2 m
280.74063 181.2 l
280.74063 187.2 l
h
272.74063 184.2 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
658.7406 259.80002 m
666.7406 262.80002 l
666.7406 256.80002 l
h
658.7406 259.80002 m
S
1 J
1 j
0.60000002 i
625.39062 108.75738 m
625.39062 57 l
S
0 i
CM
239.39062 395 m
236.39062 387 l
242.39062 387 l
h
239.39062 395 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.39062 49 m
622.39062 57 l
628.39062 57 l
h
625.39062 49 m
S
/Cs1 SC
1 0.75 1 sc
CM
209.14062 249 m
269.64062 249 l
269.64062 225 l
209.14062 225 l
h
209.14062 249 m
f
1 J
1 j
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 195 m
655.64062 195 l
655.64062 219 l
595.14062 219 l
h
595.14062 195 m
S
/Cs3 SC
0 sc
0 i
610.13062 209.5 m
("#$%&'\()[ 5.600000 2.536000 4.576000 4.648000 4.000000 4.272000 0.000000 ] xS
/Cs4 SC
0.75039524 0.75075155 0.98323244 sc
CM
209.14062 282.79999 m
269.64062 282.79999 l
269.64062 258.79999 l
209.14062 258.79999 l
h
209.14062 282.79999 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 161.2 m
655.64062 161.2 l
655.64062 185.2 l
595.14062 185.2 l
h
595.14062 161.2 m
S
/Cs3 SC
0 sc
0 i
608.64661 170.2 m
("+,&'\(343)[ 5.600000 5.096000 2.000000 4.000000 4.272000 4.888000 2.000000 5.632000 0.000000 ] xS
600.29065 181.2 m
(5\(67/2,8/&'\()[ 6.112000 4.888000 2.880000 7.064000 4.272000 2.016000 2.000000 3.536000 4.272000 4.000000 4.272000 0.000000 ] xS
/Cs4 SC
0.75039524 0.75075155 0.98323244 sc
CM
209.14062 370.1705 m
269.64062 370.1705 l
269.64062 346.1705 l
209.14062 346.1705 l
h
209.14062 370.1705 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 73.829514 m
655.64062 73.829514 l
655.64062 97.829514 l
595.14062 97.829514 l
h
595.14062 73.829514 m
S
/Cs3 SC
0 sc
0 i
608.64661 82.829514 m
("+,&'\(343)[ 5.600000 5.096000 2.000000 4.000000 4.272000 4.888000 2.000000 5.632000 0.000000 ] xS
600.29065 93.829514 m
(5\(67/2,8/&'\()[ 6.112000 4.888000 2.880000 7.064000 4.272000 2.016000 2.000000 3.536000 4.272000 4.000000 4.272000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
666.2406 85.200005 m
675.84064 85.200005 l
675.84064 148.51016 l
625.69061 148.54337 l
S
0 i
CM
272.24063 358.79999 m
280.24063 355.79999 l
280.24063 361.79999 l
h
272.24063 358.79999 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
658.2406 85.200005 m
666.2406 88.200005 l
666.2406 82.200005 l
h
658.2406 85.200005 m
S
/Cs4 SC
0.98475462 0.961429 0.48286048 sc
CM
209.14062 420.89999 m
269.64062 420.89999 l
269.64062 396.89999 l
209.14062 396.89999 l
h
209.14062 420.89999 m
f
1 J
1 j
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 23.1 m
655.64062 23.1 l
655.64062 47.099998 l
595.14062 47.099998 l
h
595.14062 23.1 m
S
/Cs3 SC
0 sc
0 i
614.18665 37.599998 m
(:,%$/6)[ 4.080000 2.000000 4.648000 4.528000 4.272000 0.000000 ] xS
/Cs4 SC
0.98475462 0.80610132 0.63830966 sc
CM
209.14062 468.62952 m
269.64062 468.62952 l
269.64062 444.62952 l
209.14062 444.62952 l
h
209.14062 468.62952 m
f
0.60000002 i
/Cs1 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -386 444 cm
595.14062 -24.629511 m
655.64062 -24.629511 l
655.64062 -0.62951082 l
595.14062 -0.62951082 l
h
595.14062 -24.629511 m
S
/Cs3 SC
0 sc
0 i
/F2.1[ 8 0 0 -8 0 0]sf
610.85864 -10.129511 m
(!"#$%&')[ 4.512000 4.768000 2.264000 2.456000 6.992000 4.272000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
625.39062 23.1 m
625.39062 9.2704887 l
S
0 i
CM
239.39062 442.72952 m
236.39062 434.72952 l
242.39062 434.72952 l
h
239.39062 442.72952 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.39062 1.2704892 m
622.39062 9.2704887 l
628.39062 9.2704887 l
h
625.39062 1.2704892 m
S
1 J
1 j
0.60000002 i
666.54999 172.32832 m
675.65002 172.32832 l
675.65002 238.63847 l
641.5 238.67168 l
S
0 i
CM
272.55002 271.67166 m
280.55002 268.67166 l
280.55002 274.67166 l
h
272.55002 271.67166 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
658.54999 172.32832 m
666.54999 175.32832 l
666.54999 169.32832 l
h
658.54999 172.32832 m
S
1 J
1 j
0.60000002 i
475.89999 136.40001 m
549.49609 136.40001 l
549.49609 234.31836 l
558.44922 234.31836 l
S
558.34534 234.31836 m
625.35779 234.31836 l
S
625.69061 228.71835 m
625.69061 234.31836 l
S
0 i
CM
239.69063 223.28165 m
236.69063 215.28165 l
242.69063 215.28165 l
h
239.69063 223.28165 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
625.69061 220.71835 m
622.69061 228.71835 l
628.69061 228.71835 l
h
625.69061 220.71835 m
S
1 J
1 j
0.60000002 i
608.94177 228.71835 m
608.94177 234.31836 l
S
0 i
CM
222.94179 223.28165 m
219.94179 215.28165 l
225.94179 215.28165 l
h
222.94179 223.28165 m
f
0 J
0 j
1 0 0 -1 -386 444 cm
608.94177 220.71835 m
605.94177 228.71835 l
611.94177 228.71835 l
h
608.94177 220.71835 m
S
ep
end
%%Trailer
%%EOF
